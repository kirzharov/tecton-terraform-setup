{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Sid": "S3Bucket",
            "Effect": "Allow",
            "Action": [
                "s3:Get*",
                "s3:ListBucket",
                "s3:CreateBucket",
                "s3:DeleteBucket",
                "s3:DeleteBucketPolicy",
                "s3:PutBucketPolicy",
                "s3:PutEncryptionConfiguration",
                "s3:PutBucketTagging",
                "s3:PutBucketOwnershipControls",
                "s3:PutBucketVersioning",
                "s3:PutLifecycleConfiguration"
            ],
            "Resource": [
                "arn:aws:s3:::tecton-${DEPLOYMENT_NAME}"
            ]
        },
        {
            "Sid": "S3Object",
            "Effect": "Allow",
            "Action": [
                "s3:GetObject",
                "s3:DeleteObject",
                "s3:PutObject"
            ],
            "Resource": [
                "arn:aws:s3:::tecton-${DEPLOYMENT_NAME}/*"
            ]
        },
        {
            "Sid": "VerifyPermissionsAndCreateInstanceProfiles",
            "Effect": "Allow",
            "Action": [
                "iam:GetPolicy",
                "iam:GetRole",
                "iam:GetRolePolicy",
                "iam:GetPolicyVersion",
                "iam:ListPolicyVersions",
                "iam:ListAttachedRolePolicies",
                "iam:ListInstanceProfilesForRole"
            ],
            "Resource": [
                "arn:aws:iam::${ACCOUNT_ID}:policy/tecton-*",
                "arn:aws:iam::${ACCOUNT_ID}:role/tecton-*",
                "arn:aws:iam::${ACCOUNT_ID}:instance-profile/tecton-*"
            ]
        },
        {
            "Sid": "ManageInstanceProfilesForTectonRoles",
            "Effect": "Allow",
            "Action": [
                "iam:CreateInstanceProfile",
                "iam:DeleteInstanceProfile",
                "iam:PassRole",
                "iam:GetInstanceProfile",
                "iam:AddRoleToInstanceProfile",
                "iam:RemoveRoleFromInstanceProfile"
            ],
            "Resource": [
                "arn:aws:iam::${ACCOUNT_ID}:policy/tecton-*",
                "arn:aws:iam::${ACCOUNT_ID}:role/tecton-*",
                "arn:aws:iam::${ACCOUNT_ID}:instance-profile/tecton-*"
            ]

        },
        {
            "Sid": "ConfigureLoadBalancer",
            "Effect": "Allow",
            "Action": [
                "elasticloadbalancing:DescribeSSLPolicies",
                "elasticloadbalancing:DescribeTargetGroups",
                "elasticloadbalancing:DescribeTargetHealth",
                "elasticloadbalancing:DescribeListeners",
                "elasticloadbalancing:DescribeTargetGroupAttributes",
                "elasticloadbalancing:DescribeAccountLimits",
                "elasticloadbalancing:DeregisterTargets",
                "elasticloadbalancing:RegisterTargets",
                "elasticloadbalancing:DeleteListener",
                "elasticloadbalancing:CreateListener",
                "elasticloadbalancing:ModifyTargetGroupAttributes",
                "elasticloadbalancing:AddTags",
                "elasticloadbalancing:CreateTargetGroup",
                "elasticloadbalancing:DeleteTargetGroup",
                "elasticloadbalancing:ModifyLoadBalancerAttributes",
                "elasticloadbalancing:CreateLoadBalancer",
                "elasticloadbalancing:DeleteLoadBalancer",
                "autoscaling:AttachLoadBalancerTargetGroups",
                "autoscaling:DetachLoadBalancerTargetGroups"
            ],
            "Resource": [
                "arn:aws:elasticloadbalancing:${REGION}:${ACCOUNT_ID}:listener/net/tecton-${DEPLOYMENT_NAME}*",
                "arn:aws:elasticloadbalancing:${REGION}:${ACCOUNT_ID}:loadbalancer/net/tecton-${DEPLOYMENT_NAME}*",
                "arn:aws:elasticloadbalancing:${REGION}:${ACCOUNT_ID}:targetgroup/tecton-${DEPLOYMENT_NAME}*",
                "arn:aws:autoscaling:${REGION}:${ACCOUNT_ID}:autoScalingGroup::autoScalingGroupName/tecton-${DEPLOYMENT_NAME}*",
                "arn:aws:autoscaling:${REGION}:${ACCOUNT_ID}:autoScalingGroup:*:autoScalingGroupName/eks-*"
            ]
        },
        {
            "Sid": "DescribeLoadBalancer",
            "Effect": "Allow",
            "Action": [
                "elasticloadbalancing:DescribeTags",
                "elasticloadbalancing:DescribeLoadBalancerAttributes",
                "elasticloadbalancing:DescribeLoadBalancers",
                "elasticloadbalancing:DescribeTargetGroups",
                "elasticloadbalancing:DescribeTargetGroupAttributes",
                "elasticloadbalancing:DescribeListeners",
                "autoscaling:DescribeAutoScalingGroups"
            ],
            "Resource": [
                "*"
            ]
        },
        {
            "Sid": "DynamoDB",
            "Effect": "Allow",
            "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:ConditionCheckItem",
                "dynamodb:CreateTable",
                "dynamodb:DeleteTable",
                "dynamodb:DescribeTable",
                "dynamodb:GetItem",
                "dynamodb:Query",
                "dynamodb:TagResource",
                "dynamodb:UntagResource",
                "dynamodb:UpdateTable",
                "dynamodb:CreateBackup",
                "dynamodb:DescribeBackup",
                "dynamodb:DeleteBackup"
            ],
            "Resource": [
                "arn:aws:dynamodb:${REGION}:${ACCOUNT_ID}:table/tecton-${DEPLOYMENT_NAME}*"
            ]
        },
        {
            "Sid": "DynamoDBGlobal",
            "Effect": "Allow",
            "Action": [
                "dynamodb:ListTables",
                "dynamodb:DescribeLimits"
            ],
            "Resource": "*"
        },
        {
            "Sid": "CreateServiceLinkedRoles",
            "Effect": "Allow",
            "Action": [
                "iam:CreateServiceLinkedRole",
                "iam:DeleteServiceLinkedRole",
                "iam:GetRole"
            ],
            "Resource": [
                "arn:aws:iam::${ACCOUNT_ID}:role/aws-service-role/rds.amazonaws.com/AWSServiceRoleForRDS",
                "arn:aws:iam::${ACCOUNT_ID}:role/aws-service-role/es.amazonaws.com/AWSServiceRoleForAmazonElasticsearchService",
                "arn:aws:iam::${ACCOUNT_ID}:role/aws-service-role/elasticloadbalancing.amazonaws.com/AWSServiceRoleForElasticLoadBalancing",
                "arn:aws:iam::${ACCOUNT_ID}:role/aws-service-role/eks-nodegroup.amazonaws.com/AWSServiceRoleForAmazonEKSNodegroup"
            ]
        },
        {
            "Sid": "ManageTectonScopedSecrets",
            "Effect": "Allow",
            "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:PutSecretValue",
                "secretsmanager:CreateSecret",
                "secretsmanager:DeleteSecret",
                "secretsmanager:PutSecretValue",
                "secretsmanager:DescribeSecret",
                "secretsmanager:GetResourcePolicy",
                "secretsmanager:TagResource",
                "secretsmanager:UnTagResource"
            ],
            "Resource": "arn:aws:secretsmanager:*:*:secret:tecton-${DEPLOYMENT_NAME}/*"
        },
        {
            "Sid": "ElasticSearch",
            "Action": [
                "es:CreateDomain",
                "es:DescribeElasticsearchDomain",
                "es:ListTags",
                "es:DeleteElasticsearchDomain"
            ],
            "Effect": "Allow",
            "Resource": [
                "arn:aws:es:${REGION}:${ACCOUNT_ID}:domain/tecton-${DEPLOYMENT_NAME}"
            ]
        },
        {
            "Sid": "CreateTectonHostedZoneForElasticSearch",
            "Action": [
                "route53:CreateHostedZone"
            ],
            "Effect": "Allow",
            "Resource": "*"
        },
        {
            "Sid": "ManageTectonHostedZoneForElasticSearch",
            "Action": [
                "route53:GetChange",
                "route53:ChangeResourceRecordSets",
                "route53:DeleteHostedZone",
                "route53:ListResourceRecordSets",
                "route53:ListTagsForResource",
                "route53:GetHostedZone"
            ],
            "Effect": "Allow",
            "Resource": [
                "arn:aws:route53:::change/*",
                "arn:aws:route53:::hostedzone/*"
            ]
        },
        {
            "Sid": "RdsAccess",
            "Action": [
                "rds:CreateDBSubnetGroup",
                "rds:DeleteDBSubnetGroup",
                "rds:AddTagsToResource",
                "rds:DescribeDBSubnetGroups",
                "rds:DescribeDBInstances",
                "rds:ModifyDBInstance",
                "rds:CreateDBInstance",
                "rds:ListTagsForResource"
            ],
            "Effect": "Allow",
            "Resource": [
                "arn:aws:rds:${REGION}:${ACCOUNT_ID}:db:tecton-${DEPLOYMENT_NAME}*",
                "arn:aws:rds:${REGION}:${ACCOUNT_ID}:subgrp:tecton-${DEPLOYMENT_NAME}*",
                "arn:aws:rds:${REGION}:${ACCOUNT_ID}:og:default*",
                "arn:aws:rds:${REGION}:${ACCOUNT_ID}:pg:default*"
            ]
        },
        {
            "Sid": "CreateCertificateForTectonAIDomain",
            "Action": [
                "acm:RequestCertificate"
            ],
            "Effect": "Allow",
            "Resource": "*",
            "Condition": {
                "StringEquals": {
                    "aws:RequestTag/tecton-owned": "true"
                }
            }
        },
        {
            "Sid": "ManageCertificateForTectonAIDomain",
            "Action": [
                "acm:DescribeCertificate",
                "acm:ListTagsForCertificate",
                "acm:DeleteCertificate"
            ],
            "Effect": "Allow",
            "Resource": "*",
            "Condition": {
                "StringEquals": {
                    "aws:ResourceTag/tecton-owned": "true"
                }
            }
        }
    ]
}
